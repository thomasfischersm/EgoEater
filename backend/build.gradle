// If you would like more information on the gradle-appengine-plugin please refer to the github page
// https://github.com/GoogleCloudPlatform/gradle-appengine-plugin

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        // V2: Add the new App Engine and Endpoints Frameworks plugin dependencies
        classpath 'com.google.cloud.tools:endpoints-framework-gradle-plugin:1.0.2'
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.3.3'
    }
}

repositories {
    jcenter()
    mavenCentral()
    google()
}

apply plugin: 'java'
apply plugin: 'war'
//apply plugin: 'appengine'

// V2: Apply new App Engine and Endpoints Framework server plugins
apply plugin: 'com.google.cloud.tools.appengine'
apply plugin: 'com.google.cloud.tools.endpoints-framework-server'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

dependencies {
    // V2: Endpoints Framework v2 migration
    implementation 'com.google.endpoints:endpoints-framework:2.0.13'

//    compile 'com.google.appengine:appengine-endpoints:1.9.42'
//    compile 'com.google.appengine:appengine-endpoints-deps:1.9.42'
    implementation 'javax.inject:javax.inject:1'
    implementation 'javax.servlet:servlet-api:2.5'
    implementation 'com.googlecode.objectify:objectify:6.0.3'
    implementation group: 'com.restfb', name: 'restfb', version: '2.18.0'
    implementation group: 'com.google.cloud', name: 'google-cloud-storage', version: '1.63.0'
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
    implementation group: 'org.json', name: 'json', version: '20180813'
    implementation group: 'com.google.auth', name: 'google-auth-library-oauth2-http', version: '0.13.0'
}

// V2: Define deployment configuration using the new App Engine plugin
// with the appengine closure
appengine {  // App Engine tasks configuration
    deploy {   // deploy configuration

        // The following is used for acceptance tests and
        // is not required for a migration.
        project = findProperty("appengine.deploy.project")
        version = findProperty("appengine.deploy.version")
        def promoteProp = findProperty("appengine.deploy.promote")
        if (promoteProp != null) {
            promote = new Boolean(promoteProp)
        }
    }
}
